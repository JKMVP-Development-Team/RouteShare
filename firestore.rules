rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can read any user document (for friend requests, profiles, etc.)
    // but can only write to their own document
    match /users/{userId} {
      allow read: if request.auth != null; // Authenticated users can read all user profiles
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Routes - users can read all, but only write their own
    match /routes/{routeId} {
      allow read: if true; // Anyone can view routes
      allow create: if request.auth != null && 
                    request.auth.uid == resource.data.userId;
      allow update, delete: if request.auth != null && 
                           request.auth.uid == resource.data.userId;
    }
    
    // Parties - users can read all active parties, but only manage their own
    match /parties/{partyId} {
      allow read: if true; // Anyone can see parties to join
      allow create: if request.auth != null && 
                    request.auth.uid == request.resource.data.creatorId;
      allow update: if request.auth != null && 
                    (request.auth.uid == resource.data.creatorId || 
                     request.auth.uid in resource.data.members);
      allow delete: if request.auth != null && 
                    request.auth.uid == resource.data.creatorId;
    }
    
    // User profiles (public info)
    match /profiles/{userId} {
      allow read: if true; // Public profiles
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}